# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
import nuvolaris.config as cfg
import nuvolaris.kube as kube
import nuvolaris.kustomize as kus
import nuvolaris.testutil as tu
import requests as req

#print("kind")
cfg.clean()
assert(cfg.detect_labels()['nuvolaris.kube'] == "kind")
assert(cfg.detect_storage()['nuvolaris.storageclass'] == "standard")

# check hostpath
cfg.configure(tu.load_sample_config())

# config map test
cm = kus.configMapTemplate("index", "test-cm", "index.html", {"item":"Hello"})
res = kus.kustom_list("test-cm", cm)
kube.apply(res)
kube.wait("pod/test-pod", "condition=Ready")
assert( tu.get_with_retry("http://localhost:3233", 60).find("Hello") >0 )
kube.delete(res)
while kube.get("po/test-pod"): pass
