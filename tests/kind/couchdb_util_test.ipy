# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
!kubectl -n nuvolaris delete all --all
!kubectl -n nuvolaris delete pvc --all

import nuvolaris.config as cfg
import nuvolaris.testutil as tu
import nuvolaris.kube as kube
import nuvolaris.couchdb as cdb
import nuvolaris.couchdb_util as cu

!kubectl apply -f deploy/nuvolaris-permissions/nuvolaris-common.yaml
# init
assert(cfg.configure(tu.load_sample_config()))
cfg.detect()
cfg.put("couchdb.host", "localhost")
assert(cfg.get("couchdb.host") == "localhost")
cdb.create(None)

!kubectl -n nuvolaris wait --for=condition=ready pod couchdb-0


import nuvolaris.couchdb_util 
db = cu.CouchDB()

assert(db.wait_db_ready(60))

# database init
assert( not db.check_db("subjects"))
assert(db.create_db("subjects"))
assert(db.check_db("subjects"))
assert(not db.create_db("subjects"))
assert(db.delete_db("subjects"))
assert(not db.delete_db("subjects"))
assert(not db.check_db("subjects"))
assert(db.recreate_db("subjects") == 'recreate_db: created')
assert(db.check_db("subjects"))
assert(db.recreate_db("subjects") == 'recreate_db:')
assert(db.recreate_db("subjects", recreate=True) == 'recreate_db: deleted created')
assert(db.delete_db("subjects"))

assert(db.create_db("test"))
assert(db.get_doc("test", "test") == None) 
doc = {"_id":"test", "value":"hello" }
assert(db.update_doc("test",  doc))

assert(db.get_doc("test", "test")['value']  == 'hello')
doc['value'] = 'world'
assert(db.update_doc("test",  doc))
assert(db.get_doc("test", "test")['value']  == 'world')
assert(db.delete_doc("test", "test"))
assert(not db.delete_doc(db, "test"))
assert(cdb.update_templated_doc(db, "test", "test.json", {"item": "first"}))
assert(db.get_doc("test", "test")['value'] == 'first')
assert(cdb.update_templated_doc(db, "test", "test.json", {"item": "second"}))
assert(db.get_doc("test", "test")['value'] == 'second')
assert(db.delete_doc("test", "test"))
assert(db.delete_db("test"))

# cleanup
cdb.delete()
!kubectl wait deploy/couchdb --for=delete
