# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
!kubectl -n nuvolaris delete all --all
!kubectl -n nuvolaris delete pvc --all

import nuvolaris.config as cfg
import nuvolaris.testutil as tu
import nuvolaris.kube as kube
import nuvolaris.minio_deploy as minio
import nuvolaris.couchdb as cdb
import nuvolaris.couchdb_util as cdbu
import nuvolaris.util as util
import logging, os

# test
assert(cfg.configure(tu.load_sample_config()))
assert(cfg.detect_storage()["nuvolaris.storageclass"])

# for this test minioClient should see this env variable
os.environ['MINIO_API_HOST']='localhost'

assert(minio.create())

pod_name = util.get_pod_name("{.items[?(@.metadata.labels.app == 'minio')].metadata.name}")
assert(pod_name)

actual_minio_root_user = kube.kubectl("get", f"pods/{pod_name}", jsonpath="{.spec.containers[0].env[0].value}")
configured_minio_root_user = cfg.get('minio.admin.user')
assert(actual_minio_root_user[0] == configured_minio_root_user)

cm_minio_url = kube.kubectl("get", f"cm/config", jsonpath="{.metadata.annotations.s3_host}")
assert(cm_minio_url)
assert(minio.delete())