# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

!kubectl -n nuvolaris delete all --all
!kubectl -n nuvolaris delete pvc --all

import nuvolaris.couchdb as cdb
import nuvolaris.couchdb_util as cdbu
import nuvolaris.testutil as tu
import nuvolaris.config as cfg
import nuvolaris.kube as kube
import requests as req

assert(cfg.configure(tu.load_sample_config()))
cfg.put("couchdb.host", "localhost")
assert(cfg.detect_labels()["nuvolaris.kube"] == "kind")
assert(cfg.detect_storage()["nuvolaris.storageclass"] == "standard")
assert(cfg.get("couchdb.host") == "localhost")

!kubectl apply -f tests/kind/whisk.yaml
wsk = kube.get("wsk/controller")
cdb.create(wsk)

import nuvolaris.couchdb_util
db = nuvolaris.couchdb_util.CouchDB()

assert(db.wait_db_ready(60))
assert(db.configure_single_node())
assert(db.configure_no_reduce_limit())

assert(db.create_db("test"))
assert(db.update_doc("test", {"_id":"test"}))
assert(db.get_doc("test", "test", no_auth=True)['_id'] == 'test')
assert(db.add_user("hello", "world"))
assert(db.add_role("test", ["hello"]))
assert(db.get_doc("test", "test", no_auth=True) == None)
assert(db.get_doc("test", "test", user="boh", password="mah") == None)
assert(db.get_doc("test", "test", user="hello", password="world")['_id'] == 'test')

assert(cdb.init_system(db))
assert(cdb.init_subjects(db))
assert(cdb.init_activations(db))
assert(cdb.init_actions(db))
assert(cdb.add_initial_subjects(db))

!kubectl -n nuvolaris delete all --all
!kubectl -n nuvolaris delete pvc --all

"""
import nuvolaris.couchdb_util as cu
import nuvolaris.couchdb as cdb
import nuvolaris.testutil as tu
import requests as req
cdb.init()
# TODO check the database after the init
"""
