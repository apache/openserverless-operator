# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
 
>>> import nuvolaris.kube as kube, nuvolaris.testutil as tu
>>> tu.grep(kube.kubectl("get", "ns"), "kube-system", field=0)
kube-system
>>> kube.returncode
0
>>> "default" in kube.kubectl("get", "ns", jsonpath="{.items[*].metadata.name}")
True
>>> tu.catch(lambda: kube.kubectl("error"))
<class 'Exception'> Error: flags cannot be placed before plugin name: -n
>>> print(kube.returncode, kube.error.strip())
1 Error: flags cannot be placed before plugin name: -n
>>> tu.grep(kube.kubectl("apply", "-f", "-", input=kube.configMap("test", file='Hello')), "configmap")
configmap/test created
>>> tu.grep(kube.kubectl("get", "cm/test", "-o", "yaml"), r"name: t|file: H", sort=True)
file: Hello
name: test
>>> tu.grep(kube.kubectl("delete", "cm/test"), "configmap")
configmap "test" deleted

>>> import nuvolaris.kube as kube, nuvolaris.testutil as tu, nuvolaris.kustomize as nku
>>> obj = {"apiVersion": "v1", "kind": "Namespace", "metadata":{"name":"nuvolaris"}}
>>> _ = kube.apply(obj)
>>> print(kube.apply(obj).strip())
namespace/nuvolaris unchanged
>>> obj = nku.kustom_list("test")
>>> print(kube.apply(obj).strip())
service/test-svc created
pod/test-pod created
>>> print(kube.delete(obj).strip())
service "test-svc" deleted
pod "test-pod" deleted

>>> from nuvolaris.testutil import nprint
>>> from nuvolaris.kube import kubectl
>>> from nuvolaris.kube import patch
>>> nprint(kubectl("apply", "-f", "deploy/test/_crd.yaml"))
customresourcedefinition.apiextensions.k8s.io/samples.nuvolaris.org created
>>> nprint(kubectl("apply", "-f", "deploy/test/_obj.yaml"))
sample.nuvolaris.org/obj created
>>> nprint(kubectl("get", "sample/obj"))
NAME   MESSAGE
obj    
>>> nprint(patch("sample/obj", {"spec": {"message": "hello"}}))
sample.nuvolaris.org/obj patched
>>> nprint(kubectl("get", "sample/obj"))
NAME   MESSAGE
obj    hello
>>> nprint(kubectl("delete", "-f", "deploy/test/_obj.yaml"))
sample.nuvolaris.org "obj" deleted
>>> nprint(kubectl("delete", "-f", "deploy/test/_crd.yaml"))
customresourcedefinition.apiextensions.k8s.io "samples.nuvolaris.org" deleted
