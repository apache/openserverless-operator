# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

version: '3'

env:
  BACKUP_STORAGE_LOCATION_NAME: gcloud-app-1
  PROVIDER_NAME: aws
  PROVIDER_PLUGIN_TAG: v1.6.2
  REGION: us-east-1
  BUCKET: nuvolaris-gc-app-1-backup
  VOLUME_SNAPSHOT_LOCATION_NAME: gc-app-1-volume

tasks:

  setup-aws:
    cmds:
    - aws s3api create-bucket --bucket ${BUCKET} --region ${REGION}
    - aws iam create-user --user-name velero-app-1
    - |
      cat > __velero-policy.json <<EOF
      {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Action": [
                      "ec2:DescribeVolumes",
                      "ec2:DescribeSnapshots",
                      "ec2:CreateTags",
                      "ec2:CreateVolume",
                      "ec2:CreateSnapshot",
                      "ec2:DeleteSnapshot"
                  ],
                  "Resource": "*"
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "s3:GetObject",
                      "s3:DeleteObject",
                      "s3:PutObject",
                      "s3:AbortMultipartUpload",
                      "s3:ListMultipartUploadParts"
                  ],
                  "Resource": [
                      "arn:aws:s3:::${BUCKET}/*"
                  ]
              },
              {
                  "Effect": "Allow",
                  "Action": [
                      "s3:ListBucket"
                  ],
                  "Resource": [
                      "arn:aws:s3:::${BUCKET}"
                  ]
              }
          ]
      }
      EOF
    - aws iam put-user-policy --user-name velero-saas1 --policy-name velero-saas1-policy --policy-document file://__velero-policy.json
    - aws iam create-access-key --user-name velero-saas1 > __hidden-secret.json

  create-aws-key:
    cmds:
    - |
      cat << EOF > __credentials_velero
      [default]
      aws_access_key_id=$ACCESS_KEY_ID
      aws_secret_access_key=$SECRET_ACCESS_KEY
      EOF
    env:
      SECRET_ACCESS_KEY:
        sh: cat __hidden-secret.json | jq '.AccessKey.SecretAccessKey'
      ACCESS_KEY_ID:
        sh: cat __hidden-secret.json | jq '.AccessKey.AccessKeyId'

# Helm related setup
  setup-repo:
    - helm repo add vmware-tanzu https://vmware-tanzu.github.io/helm-charts
    - helm repo update             

  velero-helm-install: 
    - |
      helm install velero vmware-tanzu/velero \
      --set-file credentials.secretContents.cloud=__credentials-velero \
      --set configuration.backupStorageLocation[0].name=${BACKUP_STORAGE_LOCATION_NAME} \
      --set configuration.backupStorageLocation[0].provider=${PROVIDER_NAME} \
      --set configuration.backupStorageLocation[0].bucket=${BUCKET} \
      --set configuration.backupStorageLocation[0].config.region=${REGION} \
      --set configuration.volumeSnapshotLocation[0].name=${VOLUME_SNAPSHOT_LOCATION_NAME} \
      --set configuration.volumeSnapshotLocation[0].provider=${PROVIDER_NAME} \
      --set configuration.volumeSnapshotLocation[0].config.region=${REGION} \
      --set initContainers[0].name=velero-plugin-for-${PROVIDER_NAME} \
      --set initContainers[0].image=velero/velero-plugin-for-${PROVIDER_NAME}:${PROVIDER_PLUGIN_TAG}\
      --set initContainers[0].volumeMounts[0].mountPath=/target \
      --set initContainers[0].volumeMounts[0].name=plugins

# setup via velero cli
  setup-cli: 
    cmds: 
    - |
      sudo rm -Rf /tmp/velero ;\
      mkdir /tmp/velero ;\
      ARCH="$(dpkg --print-architecture)" ;\
      URL="https://github.com/vmware-tanzu/velero/releases/download/${CLI_VERSION}/velero-${CLI_VERSION}-linux-${ARCH}.tar.gz" ;\
      echo "$URL" ;\
      curl -sL "$URL" | tar xzvf - -C /tmp/velero; \
      sudo mv /tmp/velero/velero-${CLI_VERSION}-linux-amd64/velero /usr/bin      
    env:
      CLI_VERSION: v1.10.3

  velero-cli-install: |
    velero install \
    --provider ${PROVIDER_NAME} \
    --plugins velero/velero-plugin-for-${PROVIDER_NAME}:${PROVIDER_PLUGIN_TAG} \
    --bucket ${BUCKET} \
    --secret-file ./__credentials_velero \
    --backup-location-config region=${REGION} \
    --snapshot-location-config region=${REGION} \
    --use-node-agent \
    --default-volumes-to-fs-backup

  velero-cli-uninstall: |
    velero uninstall   

  velero-backup-create:
    velero backup create gc-app-1-backup --include-namespaces nuvolaris --csi-snapshot-timeout=20m

  velero-backup-schedule:    
    velero create schedule gc-app-1-backup --schedule="0 1 * * *" --include-namespaces nuvolaris 
  
  velero-backup-trigger:
    velero backup create --from-schedule gc-app-1-backup   

  velero-backup-delete:
    velero backup delete gc-app-1-backup

