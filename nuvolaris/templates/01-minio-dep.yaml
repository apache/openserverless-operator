# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: minio-deployment
  namespace: nuvolaris
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: minio-pv-claim
      {% if applypodsecurity %}
      securityContext:
        fsGroup: 1001
        runAsUser: 1001 
      {% endif %}      
      containers:
      - name: minio
        image: bitnami/minio:2023.3.24
        securityContext:
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true                  
        command:
        - /bin/bash
        - -c
        args: 
        - minio server /data --console-address :9090
        env:
        - name: MINIO_ROOT_USER
          value: {{minio_root_user}}
        - name: MINIO_ROOT_PASSWORD
          value: {{minio_root_password}}
        ports:
        - name: api
          containerPort: 9000
        - name: content
          containerPort: 9090         
        volumeMounts:
        - name: data # must match the volume name, above
          mountPath: "/data"          